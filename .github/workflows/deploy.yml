name: Deploy to AWS Elastic Beanstalk

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual trigger

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Java 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'corretto'
        cache: maven

    - name: Build with Maven
      run: ./mvnw clean package -DskipTests

    - name: Prepare deployment package
      run: |
        cp target/doitou-0.0.1-SNAPSHOT.jar ./application.jar
        TIMESTAMP=$(date +%y%m%d_%H%M%S)
        ZIP_NAME="deploy-${TIMESTAMP}.zip"
        zip -r $ZIP_NAME application.jar Procfile .ebextensions/
        echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV
        echo "VERSION_LABEL=v-${TIMESTAMP}" >> $GITHUB_ENV

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Upload to S3
      run: |
        aws s3 cp ${{ env.ZIP_NAME }} \
          s3://elasticbeanstalk-us-east-1-152247411320/resume-chatbot-backend/${{ env.ZIP_NAME }}

    - name: Create EB application version
      run: |
        aws elasticbeanstalk create-application-version \
          --application-name resume-chatbot-backend \
          --version-label ${{ env.VERSION_LABEL }} \
          --source-bundle S3Bucket="elasticbeanstalk-us-east-1-152247411320",S3Key="resume-chatbot-backend/${{ env.ZIP_NAME }}" \
          --region us-east-1

    - name: Deploy to Elastic Beanstalk
      run: |
        aws elasticbeanstalk update-environment \
          --environment-name resume-chatbot-env-v5 \
          --version-label ${{ env.VERSION_LABEL }} \
          --region us-east-1

    - name: Wait for deployment
      run: |
        echo "Waiting for deployment to complete..."
        sleep 120

    - name: Test deployment
      run: |
        RESPONSE=$(curl -s http://resume-chatbot-env-v5.eba-cqqaf2qn.us-east-1.elasticbeanstalk.com/api/test/ping)
        echo "Response: $RESPONSE"
        if echo "$RESPONSE" | grep -q "success"; then
          echo "✅ Deployment successful!"
        else
          echo "❌ Deployment test failed!"
          exit 1
        fi

    - name: Deployment summary
      if: always()
      run: |
        echo "### Deployment Summary 🚀" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Version:** ${{ env.VERSION_LABEL }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Environment:** resume-chatbot-env-v5" >> $GITHUB_STEP_SUMMARY
        echo "- **Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Backend URL:** http://resume-chatbot-env-v5.eba-cqqaf2qn.us-east-1.elasticbeanstalk.com" >> $GITHUB_STEP_SUMMARY
